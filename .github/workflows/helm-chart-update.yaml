name: Helm Charts Update

on:
  push:
    branches: [main]
    paths:
      - 'helm/charts/**'
      - 'k8s/argocd/**'

env:
  AZURE_REGISTRY_HELM_PATH: helm

jobs:
  push-all-charts:
    runs-on: [self-hosted, deploy]
    steps:
    - uses: actions/checkout@v3

    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.11.0'

    - name: Login to Helm OCI Registry
      run: |
        helm registry login ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io \
          --username ${{ secrets.AZURE_REGISTRY_USERNAME }} \
          --password ${{ secrets.AZURE_REGISTRY_PASSWORD }}

    - name: Package and Push All Charts
      run: |
        mkdir -p ./deploy/helm/releases
        
        # Loop through all chart folders
        for dir in helm/charts/*/
        do
          echo "Processing chart in directory: $dir"
          
          # Read chart name
          chart_name=$(basename "$dir")
          
          # Read chart version
          chart_version=$(grep '^version:' "$dir/Chart.yaml" | awk '{print $2}')
          
          echo "Chart Name: $chart_name, Version: $chart_version"
          
          # Package the chart
          helm package "$dir" -d ./deploy/helm/releases
          
          # Push the chart
          helm push ./deploy/helm/releases/${chart_name}-${chart_version}.tgz \
            oci://${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/${{ env.AZURE_REGISTRY_HELM_PATH }}
        done

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Update ArgoCD Application Manifests
      env:
        AZURE_REGISTRY_NAME: ${{ secrets.AZURE_REGISTRY_NAME }}
      run: |
        echo "Updating ArgoCD application manifests with actual registry values..."
        
        # Create a temporary directory for processed manifests
        mkdir -p ./processed-manifests
        
        # Process each ArgoCD application manifest
        for app_file in k8s/argocd/*-app.yaml; do
          if [ -f "$app_file" ]; then
            echo "Processing: $app_file"
            
            # Replace environment variables using envsubst
            app_name=$(basename "$app_file")
            envsubst '$AZURE_REGISTRY_NAME' < "$app_file" > "./processed-manifests/$app_name"
            
            # Apply the processed manifest with validation disabled
            kubectl apply -f "./processed-manifests/$app_name" --validate=false
            
            echo "Applied updated manifest: $app_name"
          fi
        done
